---

    - name: Rename systemd template to application name
      command: 'mv {{ APPLICATION_DEST }}/{{ APPLICATION_NAME }}/ansible/files/app_template.service /etc/systemd/system/{{ APPLICATION_NAME }}.service'
      args:
        chdir: '{{ APPLICATION_DEST }}/{{ APPLICATION_NAME }}'

    - name: Configure application name in systemd file
      replace:
        path: '/etc/systemd/system/{{ APPLICATION_NAME }}.service'
        regexp: 'APP_NAME'
        replace: '{{ APPLICATION_NAME }}'

    - name: Configure application destination in systemd file
      replace:
        path: '/etc/systemd/system/{{ APPLICATION_NAME }}.service'
        regexp: 'APP_DEST'
        replace: '{{ APPLICATION_DEST }}/{{ APPLICATION_NAME }}'

    - name: Configure application deployment port in systemd file
      replace:
        path: '/etc/systemd/system/{{ APPLICATION_NAME }}.service'
        regexp: 'DEPLOYMENT_PORT'
        replace: '{{ DEPLOYMENT_PORT }}'

    - name: Move prometheus exporter systemd file to /etc/systemd
      command: 'mv {{ APPLICATION_DEST }}/{{ APPLICATION_NAME }}/ansible/files/prom_exp.service /etc/systemd/system/prom_exp.service'
      args:
        chdir: '{{ APPLICATION_DEST }}/{{ APPLICATION_NAME }}'
      when: checkkey | bool

    - name: Configure application destination in prometheus exporter systemd file
      replace:
        path: '/etc/systemd/system/prom_exp.service'
        regexp: 'APP_DEST'
        replace: '{{ APPLICATION_DEST }}/{{ APPLICATION_NAME }}'
      when: checkkey | bool

    - name: Update systemd config in system
      systemd:
        daemon_reload: yes

    - name: Enable and start prometheus_exporter systemd service
      systemd:
        state: started
        name: prom_exp
        enabled: yes 
      when: checkkey | bool 

    - name: Enable and start application systemd service
      systemd:
        state: started
        name: '{{ APPLICATION_NAME }}'
        enabled: yes 

    - name: Restart application systemd service
      systemd:
        state: restarted
        name: '{{ APPLICATION_NAME }}'
        enabled: yes 

    - name: Check application systemd service status
      shell: systemctl status {{ APPLICATION_NAME }} | grep Active
      ignore_errors: yes
      register: service_output
