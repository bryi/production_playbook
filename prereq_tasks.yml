---    
    - name: Install epel-release to RedHat OS
      raw: yum install epel-release -y
      when: ansible_distribution == 'CentOS'

    - name: Check or install needed Python versions on RedHat OS
      raw: yum install python python-pip python3 python3-pip -y
      when: ansible_distribution == 'CentOS'

    - name: Check or install needed Python versions on Debian/Ubuntu OS
      raw: sudo apt-get install python python-pip python3 python3-pip -y
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Install nodejs latest repo
      shell: curl -sL https://rpm.nodesource.com/setup_12.x | bash -

    - name: Install yarn latest repo
      shell: curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo

    - name: Install yarn repo pubkey
      shell: rpm --import https://dl.yarnpkg.com/rpm/pubkey.gpg

    - name: Remove nodejs on RedHat OS if installed
      yum: name={{ item }} state=absent
      loop: [ 'nodejs', 'npm' ]
      when: ansible_distribution == 'CentOS'

    - name: Remove nodejs on Debian/Ubuntu OS if installed
      apt: name={{ item }} state=absent
      loop: [ 'nodejs', 'npm' ]
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Install required system packages to CentOS 
      yum: name={{ item }} state=latest update_cache=yes
      loop: [ 'git', 'libxml2-devel', 'postgresql', 'postgresql-libs', 'postgresql-devel', 'libxslt-devel', 'tzdata', 'nodejs', 'yarn' ]
      when: ansible_distribution == 'CentOS'

    - name: Install required system packages to Ubuntu/Debian
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'git', 'libxml2-devel', 'postgresql', 'postgresql-libs', 'postgresql-devel', 'libxslt-devel', 'tzdata', 'nodejs' ]
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Stop and disable firewalld firewall on CentOS OS
      systemd:
        state: stopped
        name: firewalld
        enabled: no 
      when: ansible_distribution == 'CentOS'

    - name: Ensure a 'wheel' group
      group:
        name: wheel
        state: present

    - name: Add a new user
      user:
        name: "{{ rails_user }}"
        shell: /bin/bash
        password: "{{ rails_user_password | password_hash('sha512') }}"
        groups: "sudo"

    - name: Deploy SSH Key
      authorized_key:
        user: "{{ rails_user }}"
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
        state: present

    - name: restart servers
      ignore_errors: true
      delegate_to: "{{ item }}"
      with_items: "{{ groups['production'] }}"
      run_once: true
      reboot:
        reboot_timeout: 600
